apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: 'kotlinx-serialization'
apply plugin: 'dagger.hilt.android.plugin'

android {
  compileSdkVersion config.compileSdkVersion
  defaultConfig {
    minSdkVersion config.minSdkVersion
    targetSdkVersion config.targetSdkVersion
    versionCode config.versionCode
    versionName config.versionName
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    buildConfigField "String", "GITHUB_API_TOKEN",
        "\"" + properties.getProperty("github_api_token") + "\""
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
    coreLibraryDesugaringEnabled true
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
}

dependencies {

  // module
  api(project(':model'))

  // desugar
  coreLibraryDesugaring(deps.desugar)

  // kotlin
  implementation(deps.kotlin)
  implementation(deps.kotlinSerialization)

  // coroutine
  implementation(deps.coroutineCore)
  implementation(deps.coroutineAndroid)
  testImplementation(deps.coroutineTest)

  // database
  api(deps.roomRuntime)
  kapt(deps.roomCompiler)
  implementation(deps.roomKtx)

  // network
  api(deps.retrofit)
  api(deps.retrofitConverter)
  debugImplementation(deps.loggingInterceptor)
  testImplementation(deps.mockWebServer)

  // dependency injection
  implementation(deps.dagger)
  kapt(deps.daggerCompiler)
  implementation(deps.daggerHilt)
  kapt(deps.daggerHiltCompiler)
  implementation(deps.androidHilt)
  implementation(deps.androidHiltViewModel)
  kapt(deps.androidHiltCompiler)

  // test
  testImplementation(deps.junit)
  testImplementation(deps.truth)
  testImplementation(deps.testCore)
  testImplementation(deps.mockk)
}